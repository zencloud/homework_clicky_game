{"version":3,"sources":["component/CardContainer.jsx","component/Card.jsx","component/Notification.jsx","App.jsx","index.js"],"names":["CardContainer","className","this","props","children","React","Component","Card","data-id","id","alt","src","onClick","handleClick","Notification","console","log","messageNotice","App","state","scoreCurrent","scoreBest","cardArray","Array","keys","clickedArray","noticeShow","noticeMessage","includes","shuffleCards","setState","newState","push","array","sort","Math","random","showNotice","map","key","ReactDOM","render","document","getElementById"],"mappings":"sPAceA,G,6LATP,OACI,yBAAKC,UAAU,kBACdC,KAAKC,MAAMC,c,GALIC,IAAMC,YCanBC,EAbF,SAACJ,GACV,OACI,yBAAKF,UAAU,QACX,yBACIO,UAASL,EAAMM,GACfC,IAAI,YACJC,IAAG,iBAAYR,EAAMM,GAAlB,QACHG,QAAS,kBAAMT,EAAMU,YAAYV,EAAMM,SCGxCK,EAVM,SAACX,GAGlB,OADAY,QAAQC,IAAIb,GAER,yBAAKF,UAAU,oBACX,2BAAIE,EAAMc,iBCqHPC,E,2MAlHdC,MAAQ,CACPC,aAAc,EACdC,UAAW,EACXC,UAAU,YAAKC,MAAM,GAAGC,QACxBC,aAAc,GACdC,YAAY,EACZC,cAAe,I,EAMhBd,YAAc,SAACJ,GAiBd,GAdI,EAAKU,MAAMM,aAAaG,SAASnB,KAEpC,EAAKoB,aAAa,EAAKV,MAAMG,WAG7B,EAAKQ,SAAS,CACbV,aAAc,EACdM,YAAY,EACZC,cAAe,mBACfF,aAAc,OAKX,EAAKN,MAAMM,aAAaG,SAASnB,GAAK,CAG1C,IAAIsB,EAAW,GAGfA,EAASX,aAAgB,EAAKD,MAAMC,aAAe,EAGrB,IAA1BW,EAASX,eAGZW,EAASL,YAAa,EACtBK,EAASJ,cAAgB,sBAKtB,EAAKR,MAAMO,aAAcK,EAASL,YAAa,GAGnD,EAAKP,MAAMM,aAAaO,KAAKvB,GAEzBsB,EAASX,aAAe,EAAKD,MAAME,YACtCU,EAASV,UAAYU,EAASX,cAG/B,EAAKS,aAAa,EAAKV,MAAMG,WAC7B,EAAKQ,SAASC,K,EAMhBF,aAAe,SAACI,GACfA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,O,mFAKjClC,KAAK2B,aAAa3B,KAAKiB,MAAMG,WAC7BpB,KAAK4B,SAAS5B,KAAKiB,S,+BAGV,IAGLkB,EAHI,OAOR,OAHInC,KAAKiB,MAAMO,aACdW,EAAa,kBAAC,EAAD,CAAcpB,cAAef,KAAKiB,MAAMQ,iBAGrD,yBAAK1B,UAAU,eAGd,yBAAKA,UAAU,wBACd,6BACC,+CAED,yBAAKA,UAAU,uBACd,6CAAmBC,KAAKiB,MAAMC,cAC9B,0CAAgBlB,KAAKiB,MAAME,aAI5BgB,EAGD,kBAAC,EAAD,KAEEnC,KAAKiB,MAAMG,UAAUgB,KAAI,SAAC7B,GAAD,OACxB,kBAAC,EAAD,CACC8B,IAAK9B,EACLA,GAAIA,EACJI,YAAa,EAAKA,uB,GA1GRR,IAAMC,WCHxBkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d157a38a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass CardContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card-container\">\r\n            {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CardContainer;","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img\r\n                data-id={props.id}\r\n                alt=\"Game Card\" \r\n                src={`./imgs/${props.id}.png`}\r\n                onClick={() => props.handleClick(props.id)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst Notification = (props) => {\r\n    \r\n    console.log(props);\r\n    return(\r\n        <div className=\"app-notification\">\r\n            <p>{props.messageNotice}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react';\nimport './assets/reset.css';\nimport './assets/app_styles.css';\nimport CardContainer from './component/CardContainer';\nimport Card from './component/Card';\nimport Notification from './component/Notification'\n\nclass App extends React.Component {\n\n\t// Set game config via state\n\tstate = {\n\t\tscoreCurrent: 0,\n\t\tscoreBest: 0,\n\t\tcardArray: [...Array(9).keys()],\n\t\tclickedArray: [],\n\t\tnoticeShow: false,\n\t\tnoticeMessage: ''\n\t}\n\n\n\n\t// Card Click Input\n\thandleClick = (id) => {\n\n\t\t// If already clicked: Game Over\n\t\tif (this.state.clickedArray.includes(id)) {\n\t\t\t// Shuffle Card Array\n\t\t\tthis.shuffleCards(this.state.cardArray);\n\n\t\t\t// Enable Message\n\t\t\tthis.setState({\n\t\t\t\tscoreCurrent: 0,\n\t\t\t\tnoticeShow: true,\n\t\t\t\tnoticeMessage: \"Sorry, you lost!\",\n\t\t\t\tclickedArray: []\n\t\t\t});\n\t\t}\n\n\t\t// If not found: Score Success\n\t\tif (!this.state.clickedArray.includes(id)) {\n\n\t\t\t// Create new state for later\n\t\t\tlet newState = {}\n\n\t\t\t// New Score:\n\t\t\tnewState.scoreCurrent = (this.state.scoreCurrent + 1);\n\n\t\t\t// Player Wins\n\t\t\tif (newState.scoreCurrent === 9) {\n\t\t\t\t\n\t\t\t\t// Enable Win Notice\n\t\t\t\tnewState.noticeShow = true;\n\t\t\t\tnewState.noticeMessage = \"Congrats, you won!\";\n\t\t\t}\n\n\n\t\t\t// Disable Notification Check\n\t\t\tif (this.state.noticeShow) { newState.noticeShow = false; }\n\n\t\t\t// Add last clicked to array\n\t\t\tthis.state.clickedArray.push(id);\n\n\t\t\tif (newState.scoreCurrent > this.state.scoreBest) {\n\t\t\t\tnewState.scoreBest = newState.scoreCurrent;\n\t\t\t}\n\t\n\t\t\tthis.shuffleCards(this.state.cardArray);\n\t\t\tthis.setState(newState);\n\t\t}\n\n\t}\n\n\t// Shuffle the card array\n\tshuffleCards = (array) => {\n\t\tarray.sort(() => Math.random() - 0.5);\n\t}\n\n\t// Initialize first random shuffle\n\tcomponentDidMount() {\n\t\tthis.shuffleCards(this.state.cardArray);\n\t\tthis.setState(this.state);\n\t}\n\n\trender() {\n\n\t\t// Render Notification\n\t\tlet showNotice;\n\t\tif (this.state.noticeShow) {\n\t\t\tshowNotice = <Notification messageNotice={this.state.noticeMessage} />;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app-wrapper\">\n\n\t\t\t\t{/* Header */}\n\t\t\t\t<div className=\"app-header-container\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>Tap-o-Lantern!</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"app-score-container\">\n\t\t\t\t\t\t<p>Current Score: {this.state.scoreCurrent}</p>\n\t\t\t\t\t\t<p>Best Score: {this.state.scoreBest}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{showNotice}\n\n\t\t\t\t{/* Game Cards */}\n\t\t\t\t<CardContainer>\n\t\t\t\t\t{ // Create Cards\n\t\t\t\t\t\tthis.state.cardArray.map((id) => (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</CardContainer>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}